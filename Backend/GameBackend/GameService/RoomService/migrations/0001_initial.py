# Generated by Django 4.2.13 on 2024-08-01 11:35

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MatchHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('matchtype', models.CharField(db_column='MatchType', default='', max_length=8)),
                ('fOpponent', models.IntegerField(db_column='fOpponent', default=-1)),
                ('sOpponent', models.IntegerField(db_column='sOpponent', default=-1)),
                ('tOpponent', models.IntegerField(db_column='tOpponent', default=-1)),
                ('lOpponent', models.IntegerField(db_column='lOpponent', default=-1)),
                ('mStartDate', models.DateTimeField(db_column='mStartDate', default='')),
                ('Score', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), db_column='Score', size=None)),
                ('Winners', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), db_column='Winners', size=None)),
            ],
            options={
                'db_table': 'UserDataManagement_matchhistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uusername', models.CharField(db_column='uUsername', max_length=24, unique=True)),
                ('upassword', models.CharField(db_column='uPassword', max_length=128)),
                ('uemail', models.CharField(db_column='uEmail', max_length=32, unique=True)),
                ('ufname', models.CharField(db_column='uFName', default='', max_length=16)),
                ('ulname', models.CharField(db_column='uLName', default='', max_length=16)),
                ('uregdate', models.DateTimeField(db_column='uRegDate', default='')),
                ('uprofilepic', models.ImageField(db_column='uProfilePic', default='/static/img/pfp/Default.png', upload_to='profile_pics/')),
                ('uprofilebgpic', models.ImageField(db_column='uProfileBgPic', default='', upload_to='profile_bg_pics/')),
                ('udesc', models.CharField(db_column='uDesc', default='', max_length=100)),
                ('uip', models.CharField(db_column='uIp', default='', max_length=16)),
                ('ucids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), db_column='ucIDs', default=list, size=None)),
                ('uIs42', models.BooleanField(db_column='uIs42', default=False)),
                ('matchesplayed', models.IntegerField(db_column='MatchesPlayed', default=0)),
                ('matcheswon', models.IntegerField(db_column='MatchesWon', default=0)),
                ('matcheslost', models.IntegerField(db_column='MatchesLost', default=0)),
                ('xp', models.IntegerField(db_column='XP', default=0)),
                ('rank', models.IntegerField(db_column='Rank', default=1)),
                ('level', models.FloatField(db_column='level', default=0)),
                ('utitle', models.CharField(db_column='uTitle', default='', max_length=16)),
                ('udiscordid', models.CharField(db_column='uDiscordID', default='', max_length=16)),
                ('utournamentsplayed', models.IntegerField(db_column='uTournamentsPlayed', default=0)),
                ('utournamentswon', models.IntegerField(db_column='uTournamentsWon', default=0)),
                ('utournamentslost', models.IntegerField(db_column='uTournamentsLost', default=0)),
                ('ABlocked', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), db_column='ABlocked', default=list, size=None)),
                ('ABlockedBy', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), db_column='ABlockedBy', default=list, size=None)),
                ('Afriends', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), db_column='AFriends', default=list, size=None)),
                ('ARequests', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), db_column='ARequests', default=list, size=None)),
                ('TwoFactor', models.BooleanField(db_column='TwoFactor', default=False)),
                ('isOnline', models.BooleanField(db_column='online', default=False)),
            ],
            options={
                'db_table': 'UserDataManagement_user',
                'managed': False,
            },
        ),
    ]
